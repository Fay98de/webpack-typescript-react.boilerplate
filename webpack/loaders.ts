import MiniCssExtractPlugin from 'mini-css-extract-plugin'
import sass from 'sass'
import { RuleSetUseItem } from 'webpack'

import { isDev, isProd } from './env'
import * as paths from './paths'

export const babelLoader: RuleSetUseItem = {
  loader: 'babel-loader',
  options: {
    configFile: paths.babelrc,
  },
}

/***
 * @see https://webpack.js.org/loaders/style-loader/#root
 */
export const styleLoader: RuleSetUseItem = {
  loader: 'style-loader',
  options: {
    esModule: false,
  },
}

export const postCssLoader: RuleSetUseItem = {
  loader: 'postcss-loader',
  options: {
    postcssOptions: {
      plugins: isProd ? ['autoprefixer', 'cssnano'] : ['autoprefixer'],
    },
    sourceMap: true,
  },
}

export const cssLoader: RuleSetUseItem = {
  loader: 'css-loader',
}

export const cssModuleLoader: RuleSetUseItem = {
  loader: 'css-loader',
  options: {
    esModule: false,
    modules: {
      exportLocalsConvention: 'camelCaseOnly',
      localIdentName: '[local]__[contenthash:base64:5]',
    },
  },
}

/**
 * @see https://webpack.js.org/loaders/less-loader/#root
 */
export const lessLoader: RuleSetUseItem = {
  loader: 'less-loader',
  options: {
    sourceMap: true,
    lessOptions: {
      javascriptEnabled: true,
    },
  },
}

export const sassLoader: RuleSetUseItem = {
  loader: 'sass-loader',
  options: {
    sourceMap: true,
    implementation: sass,
  },
}

export const sassResourceLoader: RuleSetUseItem = {
  loader: 'sass-resources-loader',
  options: {
    resources: paths.sassResources,
  },
}

/**
 * @see https://webpack.js.org/loaders/sass-loader/#problems-with-url
 */
export const resolveUrlLoader: RuleSetUseItem = {
  loader: 'resolve-url-loader',
  options: {
    sourceMap: true,
  },
}

/***
 * @see https://webpack.js.org/plugins/mini-css-extract-plugin/#root
 */
export const miniCssExtractLoader: RuleSetUseItem = {
  loader: MiniCssExtractPlugin.loader,
  options: {
    esModule: false,
  },
}

/**
 * Using to convert CSS modules from css-loader to TypeScript typings
 * @see https://github.com/TeamSupercell/typings-for-css-modules-loader
 */
export const typingsCssModulesLoader: RuleSetUseItem = {
  loader: '@teamsupercell/typings-for-css-modules-loader',
  options: {
    banner:
      '// auto generated by typings-for-css-modules-loader. \n// Please do not modify this file!',
    formatter: 'prettier',
  },
}

export const svgrLoader: RuleSetUseItem = {
  loader: '@svgr/webpack',
  options: {
    babel: false,
    icon: true,
  },
}
